# Generated by Django 4.2.3 on 2023-08-28 04:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Greyhound',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('type_greyhound', models.CharField(max_length=50)),
                ('gender', models.CharField(max_length=15)),
                ('gender_abbreviation', models.CharField(blank=True, max_length=5, null=True)),
                ('color', models.CharField(max_length=20)),
                ('color_abbreviation', models.CharField(blank=True, max_length=10, null=True)),
                ('birth_date', models.CharField(max_length=50)),
                ('birth_year', models.IntegerField(blank=True, null=True)),
                ('birth_month', models.IntegerField(blank=True, null=True)),
                ('birth_day', models.IntegerField(blank=True, null=True)),
                ('dam_name', models.CharField(blank=True, max_length=100, null=True)),
                ('sire_name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Greyhound',
                'verbose_name_plural': 'Greyhounds',
            },
        ),
        migrations.CreateModel(
            name='racesDay',
            fields=[
                ('race_id', models.IntegerField(primary_key=True, serialize=False)),
                ('race_title', models.CharField(max_length=100)),
                ('track_id', models.IntegerField()),
                ('track_name', models.CharField(max_length=100)),
                ('main_title', models.CharField(max_length=100)),
                ('race_date', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'RaceDay',
                'verbose_name_plural': 'RacesDay',
            },
        ),
        migrations.CreateModel(
            name='Races',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('race_id', models.IntegerField()),
                ('id_greyhound', models.CharField(blank=True, default='', max_length=100)),
                ('avaible', models.BooleanField(default=False)),
                ('avaible_calculate', models.BooleanField(default=False)),
                ('race_date', models.DateField()),
                ('uk_time', models.TimeField()),
                ('br_time', models.TimeField()),
                ('track', models.CharField(max_length=100)),
                ('category', models.CharField(max_length=50)),
                ('subcategory', models.CharField(max_length=50)),
                ('distance', models.CharField(max_length=50)),
                ('weight', models.CharField(blank=True, max_length=50, null=True)),
                ('trap', models.IntegerField()),
                ('post_pick_racing_post', models.CharField(max_length=50)),
                ('rpr', models.IntegerField(blank=True, null=True)),
                ('win', models.FloatField(blank=True, null=True)),
                ('timeform_prediction', models.CharField(max_length=50)),
                ('timeform_stars', models.CharField(max_length=50)),
                ('result', models.CharField(max_length=50)),
                ('course', models.CharField(max_length=50)),
                ('observations', models.TextField()),
                ('odd_back', models.CharField(max_length=10)),
                ('odd_lay', models.CharField(max_length=10)),
                ('num_greyhounds', models.IntegerField()),
                ('start', models.CharField(max_length=20)),
                ('final_time', models.CharField(max_length=20)),
                ('recovery', models.CharField(blank=True, max_length=20, null=True)),
                ('brt', models.CharField(blank=True, max_length=20, null=True)),
                ('avg_position', models.CharField(max_length=10)),
                ('best_time', models.CharField(blank=True, max_length=20, null=True)),
                ('last_time', models.CharField(blank=True, max_length=50)),
                ('avg_time', models.CharField(blank=True, max_length=50)),
                ('best_start', models.CharField(blank=True, max_length=50)),
                ('last_start', models.CharField(blank=True, max_length=50)),
                ('avg_start', models.CharField(blank=True, max_length=50)),
                ('last_recovery', models.CharField(blank=True, max_length=50)),
                ('avg_recovery', models.CharField(blank=True, max_length=50)),
                ('fav_odd_back', models.CharField(max_length=10)),
                ('fav_odd_lay', models.CharField(max_length=10)),
                ('overall_recovery', models.CharField(blank=True, max_length=50)),
                ('overall_brt', models.CharField(blank=True, max_length=50)),
                ('overall_avg_position', models.CharField(max_length=10)),
                ('overall_best_time', models.CharField(blank=True, max_length=50)),
                ('overall_last_time', models.CharField(blank=True, max_length=50)),
                ('overall_avg_time', models.CharField(blank=True, max_length=50)),
                ('overall_best_start', models.CharField(blank=True, max_length=50)),
                ('overall_last_start', models.CharField(blank=True, max_length=50)),
                ('overall_avg_start', models.CharField(blank=True, max_length=50)),
                ('overall_last_recovery', models.CharField(blank=True, max_length=50)),
                ('overall_avg_recovery', models.CharField(blank=True, max_length=50)),
                ('gb_favorite', models.BooleanField(blank=True, null=True)),
                ('greyhound', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.greyhound')),
            ],
            options={
                'verbose_name': 'Race',
                'verbose_name_plural': 'Races',
            },
        ),
    ]
